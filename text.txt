
<p>hfliurehfliu</p>

一、ajax
	什么是ajax 异步 的javascript and xml
	
	Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。
	
二、同步和异步

三、ajax执行过程
	页面(请求)-->url（携带数据）-->服务器（处理数据）-->服务器向页面发回数据
	人的需求			取或给              （仓库）存或拿				回家
	1.人（对象）要去仓库存或拿东西
	2.准备工作(与创建
	取得联系，并做好准备工作)
		a:如何去，汽车，大车还是小车
		b:仓库地址
		c:是放下手在做的工作再去，还是一边继续工作一边去
	3.出发
		如果是去存，就要带东西，如果是去拿就不需要带东西
	4.到创建存或取，处理完后带东西回来
	
	ajax执行过程
	
	1.创建对象：人
	 //var xhr = new XMLHttpRequest()  //创建一个ajax对象
	 
		    //做兼容 //兼容低版本ie
			var xhr = null;//人
			if(window.XMLHttpRequest){
				xhr = new XMLHttpRequest();
			}else{
				xhr = new ActiveXObject("Microsoft.XMLHTTP");
			}
	2.与服务器建立连接
		xhr.open(请求方式,url,true/false)
						//请求方式  get/post
						//get   URL?name=哈哈&...
						//post   send("name=hfd")
						//true 异步/false 同步,默认turn;
	3.向服务器发送数据
	   // xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded")
      //模拟表单提交   post情况下设置请求头
		xhr.send()      
	4.服务器处理数据，并将结果返回到客户端
		//由于服务器处理需要时间，这里加载过快，有可以拿不到数据，因此需要对请求状态进行判断。
		//request  /请求     //xhr.readyState   /请求状态
		//xhr.status /响应状态     //xhr.statusTEXT  /响应状态文本
		//xhr.responsetext  / 响应返回值             
 
		xhr.onreadystatechange = function(){//监视请求的每一步的状态
			if(xhr.readyState == 4 && xhr.status == 200){
				alert(xhr.responsetext);
			}
		}
		
		请求过程的状态值 0 1 2 3 4
		请求过程的状态码：200 404 500 505等
		
		AJAX运行步骤与状态值说明：
			在AJAX实际运行当中，对于访问XMLHttpRequest（XHR）时并不是一次完成的，
			而是分别经历了多种状态后取得的结果，对于这种状态在AJAX中共有5种，分别是。
				0 - (未初始化)还没有调用send()方法
				1 - (载入)已调用send()方法，正在发送请求
				2 - (载入完成)send()方法执行完成，
				3 - (交互)正在解析响应内容
				4 - (完成)响应内容解析完成，可以在客户端调用了
			对于上面的状态，其中“0”状态是在定义后自动具有的状态值，而对于成功访问的状态
			（得到信息）我们大多数采用“4”进行判断。
			
		AJAX状态码说明：
			
			1**：请求收到，继续处理
			2**：操作成功收到，分析、接受
			3**：完成此请求必须进一步处理
			4**：请求包含一个错误语法或不能完成
			5**：服务器执行一个完全有效请求失败
			100——客户必须继续发出请求
			101——客户要求服务器根据请求转换HTTP协议版本
			200——交易成功
			201——提示知道新文件的URL
			202——接受和处理、但处理未完成
			203——返回信息不确定或不完整
			204——请求收到，但返回信息为空
			205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件
			206——服务器已经完成了部分用户的GET请求
			300——请求的资源可在多处得到
			301——删除请求数据
			302——在其他地址发现了请求数据
			303——建议客户访问其他URL或访问方式
			304——客户端已经执行了GET，但文件未变化
			305——请求的资源必须从服务器指定的地址得到
			306——前一版本HTTP中使用的代码，现行版本中不再使用
			307——申明请求的资源临时性删除
			400——错误请求，如语法错误
			401——请求授权失败
			402——保留有效ChargeTo头响应
			403——请求不允许
			404——没有发现文件、查询或URl
			405——用户在Request-Line字段定义的方法不允许
			406——根据用户发送的Accept拖，请求资源不可访问
			407——类似401，用户必须首先在代理服务器上得到授权
			408——客户端没有在用户指定的饿时间内完成请求
			409——对当前资源状态，请求不能完成
			410——服务器上不再有此资源且无进一步的参考地址
			411——服务器拒绝用户定义的Content-Length属性请求
			412——一个或多个请求头字段在当前请求中错误
			413——请求的资源大于服务器允许的大小
			414——请求的资源URL长于服务器允许的长度
			415——请求资源不支持请求项目格式
			416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段
			417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求
			500——服务器产生内部错误
			501——服务器不支持请求的函数
			502——服务器暂时不可用，有时是为了防止发生系统过载
			503——服务器过载或暂停维修
			504——关口过载，服务器使用另一个关口或服务来响应用户，等待时间设定值较长
			505——服务器不支持或拒绝支请求头中指定的HTTP版本

四，ie缓存问题
	Math.random();
	new Date().getTime();
五,ie编码问题
  encodeURI();
  
  	
